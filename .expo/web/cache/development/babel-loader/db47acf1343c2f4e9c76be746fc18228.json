{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { fetchClient } from \"../utils/api\";\nimport { deepCloneMapper } from \"../utils/deepCloneMapper\";\nimport { buildEndpoint, Endpoints } from \"../utils/endpoints\";\nimport { processServiceCall } from \"../utils/processServiceCall\";\nvar baseUrl = 'http://localhost:19006/';\nvar defaultOptions = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nexport var fetchTransactionsByUserKeyV1 = function fetchTransactionsByUserKeyV1(userKey) {\n  return processServiceCall(_asyncToGenerator(function* () {\n    var apiResponse = (yield fetchClient(baseUrl).get(buildEndpoint(Endpoints.TransactionsByUserKeyV1, {\n      userKey: userKey\n    }), _objectSpread({}, defaultOptions))).data;\n    return deepCloneMapper(apiResponse, function (from) {\n      return from;\n    });\n  }));\n};","map":{"version":3,"names":["fetchClient","deepCloneMapper","buildEndpoint","Endpoints","processServiceCall","baseUrl","defaultOptions","headers","fetchTransactionsByUserKeyV1","userKey","apiResponse","get","TransactionsByUserKeyV1","data","from"],"sources":["/Users/jamesgalante/Desktop/Splitsy/app/services/lib/transaction.ts"],"sourcesContent":["\n\n// postPlaceAuctionBidV1\n// await fetchClient\n//fetchAucionBidHistoryV1\n\nimport { AxiosRequestConfig } from \"axios\"\nimport { Transactions } from \"../types/transaction\"\nimport { APITransactionsResponseV1 } from \"../types/transaction-api\"\nimport { fetchClient } from \"../utils/api\"\nimport { deepCloneMapper } from \"../utils/deepCloneMapper\"\nimport { buildEndpoint, Endpoints } from \"../utils/endpoints\"\nimport { processServiceCall } from \"../utils/processServiceCall\"\n\n// TODO: will eventually need to be updated for environments\nconst baseUrl = 'http://localhost:19006/'\n\nconst defaultOptions: AxiosRequestConfig = {\n    headers: { 'Content-Type': 'application/json' }\n}\n\nexport const fetchTransactionsByUserKeyV1 = (userKey: string) => {\n    return processServiceCall(async () => {\n        const apiResponse = (\n            await fetchClient(\n                baseUrl\n            ).get<APITransactionsResponseV1>(\n                buildEndpoint(Endpoints.TransactionsByUserKeyV1, { userKey }),\n                { ...defaultOptions }\n            )\n        ).data;\n\n        return deepCloneMapper<APITransactionsResponseV1, Transactions>(\n            apiResponse,\n            (from) => from\n        )\n    })\n\n\n}\n\n// 'Promise<AxiosResponse<APITransactionsResponseV1, any>>'"],"mappings":";;;;AASA,SAASA,WAAW;AACpB,SAASC,eAAe;AACxB,SAASC,aAAa,EAAEC,SAAS;AACjC,SAASC,kBAAkB;AAG3B,IAAMC,OAAO,GAAG,yBAAyB;AAEzC,IAAMC,cAAkC,GAAG;EACvCC,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB;AAClD,CAAC;AAED,OAAO,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA4B,CAAIC,OAAe,EAAK;EAC7D,OAAOL,kBAAkB,mBAAC,aAAY;IAClC,IAAMM,WAAW,GAAG,OACVV,WAAW,CACbK,OAAO,CACV,CAACM,GAAG,CACDT,aAAa,CAACC,SAAS,CAACS,uBAAuB,EAAE;MAAEH,OAAO,EAAPA;IAAQ,CAAC,CAAC,oBACxDH,cAAc,EACtB,EACHO,IAAI;IAEN,OAAOZ,eAAe,CAClBS,WAAW,EACX,UAACI,IAAI;MAAA,OAAKA,IAAI;IAAA,EACjB;EACL,CAAC,EAAC;AAGN,CAAC"},"metadata":{},"sourceType":"module"}