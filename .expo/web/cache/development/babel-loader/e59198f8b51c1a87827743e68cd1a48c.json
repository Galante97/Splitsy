{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { types } from \"mobx-state-tree\";\nimport { CharacterModel } from \"../character/character\";\nimport { CharacterApi } from \"../../services/api/character-api\";\nimport { withEnvironment } from \"../extensions/with-environment\";\nexport var CharacterStoreModel = types.model(\"CharacterStore\").props({\n  characters: types.optional(types.array(CharacterModel), [])\n}).extend(withEnvironment).actions(function (self) {\n  return {\n    saveCharacters: function saveCharacters(characterSnapshots) {\n      self.characters.replace(characterSnapshots);\n    }\n  };\n}).actions(function (self) {\n  return {\n    getCharacters: function () {\n      var _getCharacters = _asyncToGenerator(function* () {\n        var characterApi = new CharacterApi(self.environment.api);\n        var result = yield characterApi.getCharacters();\n        if (result.kind === \"ok\") {\n          self.saveCharacters(result.characters);\n        } else {\n          __DEV__ && console.tron.log(result.kind);\n        }\n      });\n      function getCharacters() {\n        return _getCharacters.apply(this, arguments);\n      }\n      return getCharacters;\n    }()\n  };\n});\nexport var createCharacterStoreDefaultModel = function createCharacterStoreDefaultModel() {\n  return types.optional(CharacterStoreModel, {});\n};","map":{"version":3,"names":["types","CharacterModel","CharacterApi","withEnvironment","CharacterStoreModel","model","props","characters","optional","array","extend","actions","self","saveCharacters","characterSnapshots","replace","getCharacters","characterApi","environment","api","result","kind","__DEV__","console","tron","log","createCharacterStoreDefaultModel"],"sources":["/Users/jamesgalante/Desktop/Splitsy/app/models/character-store/character-store.ts"],"sourcesContent":["import { Instance, SnapshotIn, SnapshotOut, types } from \"mobx-state-tree\"\nimport { CharacterModel, CharacterSnapshotOut } from \"../character/character\"\nimport { CharacterApi } from \"../../services/api/character-api\"\nimport { withEnvironment } from \"../extensions/with-environment\"\n\n/**\n * Example store containing Rick and Morty characters\n */\nexport const CharacterStoreModel = types\n  .model(\"CharacterStore\")\n  .props({\n    characters: types.optional(types.array(CharacterModel), []),\n  })\n  .extend(withEnvironment)\n  .actions((self) => ({\n    saveCharacters: (characterSnapshots: CharacterSnapshotOut[]) => {\n      self.characters.replace(characterSnapshots)\n    },\n  }))\n  .actions((self) => ({\n    getCharacters: async () => {\n      const characterApi = new CharacterApi(self.environment.api)\n      const result = await characterApi.getCharacters()\n\n      if (result.kind === \"ok\") {\n        self.saveCharacters(result.characters)\n      } else {\n        __DEV__ && console.tron.log(result.kind)\n      }\n    },\n  }))\n\nexport interface CharacterStore extends Instance<typeof CharacterStoreModel> {}\nexport interface CharacterStoreSnapshotOut extends SnapshotOut<typeof CharacterStoreModel> {}\nexport interface CharacterStoreSnapshotIn extends SnapshotIn<typeof CharacterStoreModel> {}\nexport const createCharacterStoreDefaultModel = () => types.optional(CharacterStoreModel, {})\n"],"mappings":";AAAA,SAA4CA,KAAK,QAAQ,iBAAiB;AAC1E,SAASC,cAAc;AACvB,SAASC,YAAY;AACrB,SAASC,eAAe;AAKxB,OAAO,IAAMC,mBAAmB,GAAGJ,KAAK,CACrCK,KAAK,CAAC,gBAAgB,CAAC,CACvBC,KAAK,CAAC;EACLC,UAAU,EAAEP,KAAK,CAACQ,QAAQ,CAACR,KAAK,CAACS,KAAK,CAACR,cAAc,CAAC,EAAE,EAAE;AAC5D,CAAC,CAAC,CACDS,MAAM,CAACP,eAAe,CAAC,CACvBQ,OAAO,CAAC,UAACC,IAAI;EAAA,OAAM;IAClBC,cAAc,EAAE,wBAACC,kBAA0C,EAAK;MAC9DF,IAAI,CAACL,UAAU,CAACQ,OAAO,CAACD,kBAAkB,CAAC;IAC7C;EACF,CAAC;AAAA,CAAC,CAAC,CACFH,OAAO,CAAC,UAACC,IAAI;EAAA,OAAM;IAClBI,aAAa;MAAA,uCAAE,aAAY;QACzB,IAAMC,YAAY,GAAG,IAAIf,YAAY,CAACU,IAAI,CAACM,WAAW,CAACC,GAAG,CAAC;QAC3D,IAAMC,MAAM,SAASH,YAAY,CAACD,aAAa,EAAE;QAEjD,IAAII,MAAM,CAACC,IAAI,KAAK,IAAI,EAAE;UACxBT,IAAI,CAACC,cAAc,CAACO,MAAM,CAACb,UAAU,CAAC;QACxC,CAAC,MAAM;UACLe,OAAO,IAAIC,OAAO,CAACC,IAAI,CAACC,GAAG,CAACL,MAAM,CAACC,IAAI,CAAC;QAC1C;MACF,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EACH,CAAC;AAAA,CAAC,CAAC;AAKL,OAAO,IAAMK,gCAAgC,GAAG,SAAnCA,gCAAgC;EAAA,OAAS1B,KAAK,CAACQ,QAAQ,CAACJ,mBAAmB,EAAE,CAAC,CAAC,CAAC;AAAA"},"metadata":{},"sourceType":"module"}