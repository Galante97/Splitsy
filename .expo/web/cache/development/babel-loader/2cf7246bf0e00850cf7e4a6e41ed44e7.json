{"ast":null,"code":"import * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\";\nimport { color } from \"../../theme\";\nimport { Text } from \"./text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar VIEWSTYLE = {\n  flex: 1,\n  backgroundColor: color.storybookDarkBg\n};\nvar viewStyleArray = [VIEWSTYLE, {\n  backgroundColor: \"#7fff00\"\n}];\nstoriesOf(\"Text\", module).addDecorator(function (fn) {\n  return _jsx(StoryScreen, {\n    children: fn()\n  });\n}).add(\"Style Presets\", function () {\n  return _jsxs(Story, {\n    children: [_jsx(UseCase, {\n      text: \"default\",\n      usage: \"Used for normal body text.\",\n      children: _jsxs(View, {\n        style: VIEWSTYLE,\n        children: [_jsx(Text, {\n          children: \"Hello!\"\n        }), _jsxs(Text, {\n          style: {\n            paddingTop: 10\n          },\n          children: [\"Check out\", \"\\n\", \"my\", \"\\n\", \"line height\"]\n        }), _jsx(Text, {\n          style: {\n            paddingTop: 10\n          },\n          children: \"The quick brown fox jumped over the slow lazy dog.\"\n        }), _jsx(Text, {\n          children: \"$123,456,789.00\"\n        })]\n      })\n    }), _jsx(UseCase, {\n      text: \"bold\",\n      usage: \"Used for bolded body text.\",\n      children: _jsx(View, {\n        style: VIEWSTYLE,\n        children: _jsx(Text, {\n          preset: \"bold\",\n          children: \"Osnap! I'm puffy.\"\n        })\n      })\n    }), _jsx(UseCase, {\n      text: \"header\",\n      usage: \"Used for major section headers.\",\n      children: _jsx(View, {\n        style: VIEWSTYLE,\n        children: _jsx(Text, {\n          preset: \"header\",\n          children: \"Behold!\"\n        })\n      })\n    })]\n  });\n}).add(\"Passing Content\", function () {\n  return _jsxs(Story, {\n    children: [_jsx(UseCase, {\n      text: \"text\",\n      usage: \"Used when you want to pass a value but don't want to open a child.\",\n      children: _jsx(View, {\n        style: VIEWSTYLE,\n        children: _jsx(Text, {\n          text: \"Heyo!\"\n        })\n      })\n    }), _jsx(UseCase, {\n      text: \"tx\",\n      usage: \"Used for looking up i18n keys.\",\n      children: _jsxs(View, {\n        style: VIEWSTYLE,\n        children: [_jsx(Text, {\n          tx: \"common.ok\"\n        }), _jsx(Text, {\n          tx: \"common.cancel\"\n        })]\n      })\n    }), _jsx(UseCase, {\n      text: \"children\",\n      usage: \"Used like you would normally use a React Native <Text> component.\",\n      children: _jsx(View, {\n        style: VIEWSTYLE,\n        children: _jsx(Text, {\n          children: \"Passing strings as children.\"\n        })\n      })\n    }), _jsx(UseCase, {\n      text: \"nested children\",\n      usage: \"You can embed them and change styles too.\",\n      children: _jsx(View, {\n        style: VIEWSTYLE,\n        children: _jsxs(Text, {\n          children: [\" \", \"Hello \", _jsx(Text, {\n            preset: \"bold\",\n            children: \"bolded\"\n          }), \" World.\"]\n        })\n      })\n    })]\n  });\n}).add(\"Styling\", function () {\n  return _jsx(Story, {\n    children: _jsx(UseCase, {\n      text: \"Style array\",\n      usage: \"Text with style array\",\n      children: _jsx(View, {\n        style: viewStyleArray,\n        children: _jsxs(Text, {\n          children: [\" \", \"Hello \", _jsx(Text, {\n            preset: \"bold\",\n            children: \"bolded\"\n          }), \" World.\"]\n        })\n      })\n    })\n  });\n});","map":{"version":3,"names":["React","storiesOf","StoryScreen","Story","UseCase","color","Text","VIEWSTYLE","flex","backgroundColor","storybookDarkBg","viewStyleArray","module","addDecorator","fn","add","paddingTop"],"sources":["/Users/jamesgalante/Desktop/Splitsy/app/components/text/text.story.tsx"],"sourcesContent":["/* eslint-disable react-native/no-inline-styles */\n/* eslint-disable react-native/no-color-literals */\n\nimport * as React from \"react\"\nimport { View, ViewStyle } from \"react-native\"\nimport { storiesOf } from \"@storybook/react-native\"\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\"\nimport { color } from \"../../theme\"\nimport { Text } from \"./text\"\n\ndeclare let module\n\nconst VIEWSTYLE = {\n  flex: 1,\n  backgroundColor: color.storybookDarkBg,\n}\nconst viewStyleArray: ViewStyle[] = [VIEWSTYLE, { backgroundColor: \"#7fff00\" }]\n\nstoriesOf(\"Text\", module)\n  .addDecorator((fn) => <StoryScreen>{fn()}</StoryScreen>)\n  .add(\"Style Presets\", () => (\n    <Story>\n      <UseCase text=\"default\" usage=\"Used for normal body text.\">\n        <View style={VIEWSTYLE}>\n          <Text>Hello!</Text>\n          <Text style={{ paddingTop: 10 }}>\n            Check out{\"\\n\"}\n            my{\"\\n\"}\n            line height\n          </Text>\n          <Text style={{ paddingTop: 10 }}>The quick brown fox jumped over the slow lazy dog.</Text>\n          <Text>$123,456,789.00</Text>\n        </View>\n      </UseCase>\n      <UseCase text=\"bold\" usage=\"Used for bolded body text.\">\n        <View style={VIEWSTYLE}>\n          <Text preset=\"bold\">Osnap! I'm puffy.</Text>\n        </View>\n      </UseCase>\n      <UseCase text=\"header\" usage=\"Used for major section headers.\">\n        <View style={VIEWSTYLE}>\n          <Text preset=\"header\">Behold!</Text>\n        </View>\n      </UseCase>\n    </Story>\n  ))\n  .add(\"Passing Content\", () => (\n    <Story>\n      <UseCase\n        text=\"text\"\n        usage=\"Used when you want to pass a value but don't want to open a child.\"\n      >\n        <View style={VIEWSTYLE}>\n          <Text text=\"Heyo!\" />\n        </View>\n      </UseCase>\n      <UseCase text=\"tx\" usage=\"Used for looking up i18n keys.\">\n        <View style={VIEWSTYLE}>\n          <Text tx=\"common.ok\" />\n          <Text tx=\"common.cancel\" />\n        </View>\n      </UseCase>\n      <UseCase\n        text=\"children\"\n        usage=\"Used like you would normally use a React Native <Text> component.\"\n      >\n        <View style={VIEWSTYLE}>\n          <Text>Passing strings as children.</Text>\n        </View>\n      </UseCase>\n      <UseCase text=\"nested children\" usage=\"You can embed them and change styles too.\">\n        <View style={VIEWSTYLE}>\n          <Text>\n            {\" \"}\n            Hello <Text preset=\"bold\">bolded</Text> World.\n          </Text>\n        </View>\n      </UseCase>\n    </Story>\n  ))\n  .add(\"Styling\", () => (\n    <Story>\n      <UseCase text=\"Style array\" usage=\"Text with style array\">\n        <View style={viewStyleArray}>\n          <Text>\n            {\" \"}\n            Hello <Text preset=\"bold\">bolded</Text> World.\n          </Text>\n        </View>\n      </UseCase>\n    </Story>\n  ))\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}