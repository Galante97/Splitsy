{"ast":null,"code":"import * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\";\nimport { Toggle } from \"../../utils/react-powerplug\";\nimport { Switch } from \"./switch\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styleArray = [{\n  borderColor: \"#686868\"\n}];\nvar trackOffStyle = [{\n  backgroundColor: \"#686868\"\n}, {\n  height: 80,\n  borderRadius: 0\n}];\nvar trackOnStyle = [{\n  backgroundColor: \"#b1008e\",\n  borderColor: \"#686868\"\n}, {\n  height: 80,\n  borderRadius: 0\n}];\nvar thumbOffStyle = [{\n  backgroundColor: \"#b1008e\",\n  borderColor: \"#686868\"\n}, {\n  height: 80,\n  borderRadius: 0\n}];\nvar thumbOnStyle = [{\n  backgroundColor: \"#f0c\"\n}, {\n  height: 80,\n  borderRadius: 0,\n  borderColor: \"#686868\"\n}];\nstoriesOf(\"Switch\", module).addDecorator(function (fn) {\n  return _jsx(StoryScreen, {\n    children: fn()\n  });\n}).add(\"Behaviour\", function () {\n  return _jsxs(Story, {\n    children: [_jsx(UseCase, {\n      text: \"The Toggle Switch\",\n      usage: \"Use the switch to represent on/off states.\",\n      children: _jsx(Toggle, {\n        initial: false,\n        children: function children(_ref) {\n          var on = _ref.on,\n            toggle = _ref.toggle;\n          return _jsx(Switch, {\n            value: on,\n            onToggle: toggle\n          });\n        }\n      })\n    }), _jsx(UseCase, {\n      text: \"value = true\",\n      usage: \"This is permanently on.\",\n      children: _jsx(Switch, {\n        value: true\n      })\n    }), _jsx(UseCase, {\n      text: \"value = false\",\n      usage: \"This is permanantly off.\",\n      children: _jsx(Switch, {\n        value: false\n      })\n    })]\n  });\n}).add(\"Styling\", function () {\n  return _jsxs(Story, {\n    children: [_jsx(UseCase, {\n      text: \"Custom Styling\",\n      usage: \"Promise me this won't happen.\",\n      children: _jsx(Toggle, {\n        initial: false,\n        children: function children(_ref2) {\n          var on = _ref2.on,\n            toggle = _ref2.toggle;\n          return _jsx(View, {\n            children: _jsx(Switch, {\n              trackOnStyle: {\n                backgroundColor: \"green\",\n                borderColor: \"black\"\n              },\n              trackOffStyle: {\n                backgroundColor: \"red\",\n                borderColor: \"maroon\"\n              },\n              thumbOnStyle: {\n                backgroundColor: \"cyan\"\n              },\n              thumbOffStyle: {\n                backgroundColor: \"pink\"\n              },\n              value: on,\n              onToggle: toggle\n            })\n          });\n        }\n      })\n    }), _jsx(UseCase, {\n      text: \"Style array\",\n      usage: \"This either.\",\n      children: _jsx(Toggle, {\n        initial: false,\n        children: function children(_ref3) {\n          var on = _ref3.on,\n            toggle = _ref3.toggle;\n          return _jsx(View, {\n            children: _jsx(Switch, {\n              style: styleArray,\n              trackOffStyle: trackOffStyle,\n              trackOnStyle: trackOnStyle,\n              thumbOffStyle: thumbOffStyle,\n              thumbOnStyle: thumbOnStyle,\n              value: on,\n              onToggle: toggle\n            })\n          });\n        }\n      })\n    })]\n  });\n});","map":{"version":3,"names":["React","storiesOf","StoryScreen","Story","UseCase","Toggle","Switch","styleArray","borderColor","trackOffStyle","backgroundColor","height","borderRadius","trackOnStyle","thumbOffStyle","thumbOnStyle","module","addDecorator","fn","add","on","toggle"],"sources":["/Users/jamesgalante/Desktop/Splitsy/app/components/switch/switch.story.tsx"],"sourcesContent":["/* eslint-disable react-native/no-inline-styles */\n/* eslint-disable react-native/no-color-literals */\n\nimport * as React from \"react\"\nimport { View, ViewStyle } from \"react-native\"\nimport { storiesOf } from \"@storybook/react-native\"\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\"\nimport { Toggle } from \"../../utils/react-powerplug\"\nimport { Switch } from \"./switch\"\n\ndeclare let module\n\nconst styleArray: ViewStyle[] = [{ borderColor: \"#686868\" }]\n\nconst trackOffStyle: ViewStyle[] = [\n  { backgroundColor: \"#686868\" },\n  {\n    height: 80,\n    borderRadius: 0,\n  },\n]\nconst trackOnStyle: ViewStyle[] = [\n  {\n    backgroundColor: \"#b1008e\",\n    borderColor: \"#686868\",\n  },\n  {\n    height: 80,\n    borderRadius: 0,\n  },\n]\nconst thumbOffStyle: ViewStyle[] = [\n  {\n    backgroundColor: \"#b1008e\",\n    borderColor: \"#686868\",\n  },\n  {\n    height: 80,\n    borderRadius: 0,\n  },\n]\nconst thumbOnStyle: ViewStyle[] = [\n  { backgroundColor: \"#f0c\" },\n  {\n    height: 80,\n    borderRadius: 0,\n    borderColor: \"#686868\",\n  },\n]\n\nstoriesOf(\"Switch\", module)\n  .addDecorator((fn) => <StoryScreen>{fn()}</StoryScreen>)\n  .add(\"Behaviour\", () => (\n    <Story>\n      <UseCase text=\"The Toggle Switch\" usage=\"Use the switch to represent on/off states.\">\n        <Toggle initial={false}>\n          {({ on, toggle }) => <Switch value={on} onToggle={toggle} />}\n        </Toggle>\n      </UseCase>\n      <UseCase text=\"value = true\" usage=\"This is permanently on.\">\n        <Switch value={true} />\n      </UseCase>\n      <UseCase text=\"value = false\" usage=\"This is permanantly off.\">\n        <Switch value={false} />\n      </UseCase>\n    </Story>\n  ))\n  .add(\"Styling\", () => (\n    <Story>\n      <UseCase text=\"Custom Styling\" usage=\"Promise me this won't happen.\">\n        <Toggle initial={false}>\n          {({ on, toggle }) => (\n            <View>\n              <Switch\n                trackOnStyle={{ backgroundColor: \"green\", borderColor: \"black\" }}\n                trackOffStyle={{ backgroundColor: \"red\", borderColor: \"maroon\" }}\n                thumbOnStyle={{ backgroundColor: \"cyan\" }}\n                thumbOffStyle={{ backgroundColor: \"pink\" }}\n                value={on}\n                onToggle={toggle}\n              />\n            </View>\n          )}\n        </Toggle>\n      </UseCase>\n\n      <UseCase text=\"Style array\" usage=\"This either.\">\n        <Toggle initial={false}>\n          {({ on, toggle }) => (\n            <View>\n              <Switch\n                style={styleArray}\n                trackOffStyle={trackOffStyle}\n                trackOnStyle={trackOnStyle}\n                thumbOffStyle={thumbOffStyle}\n                thumbOnStyle={thumbOnStyle}\n                // trackOnStyle={{ backgroundColor: \"green\", borderColor: \"black\" }}\n                // trackOffStyle={{ backgroundColor: \"red\", borderColor: \"maroon\" }}\n                // thumbOnStyle={{ backgroundColor: \"cyan\" }}\n                // thumbOffStyle={{ backgroundColor: \"pink\" }}\n\n                value={on}\n                onToggle={toggle}\n              />\n            </View>\n          )}\n        </Toggle>\n      </UseCase>\n    </Story>\n  ))\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}