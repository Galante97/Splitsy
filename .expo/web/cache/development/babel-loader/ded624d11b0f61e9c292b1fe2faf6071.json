{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from \"react\";\nimport { getStorybookUI, configure } from \"@storybook/react-native\";\nimport { initFonts } from \"../app/theme/fonts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconfigure(function () {\n  require(\"./storybook-registry\");\n}, module);\nvar StorybookUI = getStorybookUI({\n  port: 9001,\n  host: \"localhost\",\n  onDeviceUI: true,\n  asyncStorage: require(\"@react-native-async-storage/async-storage\").default || null\n});\nexport function StorybookUIRoot() {\n  useEffect(function () {\n    ;\n    _asyncToGenerator(function* () {\n      yield initFonts();\n      if (typeof __TEST__ === \"undefined\" || !__TEST__) {\n        var Reactotron = require(\"../app/services/reactotron\");\n        var reactotron = new Reactotron.Reactotron();\n        reactotron.setup();\n      }\n    })();\n  }, []);\n  return _jsx(StorybookUI, {});\n}","map":{"version":3,"names":["React","useEffect","getStorybookUI","configure","initFonts","require","module","StorybookUI","port","host","onDeviceUI","asyncStorage","default","StorybookUIRoot","__TEST__","Reactotron","reactotron","setup"],"sources":["/Users/jamesgalante/Desktop/Splitsy/storybook/storybook.tsx"],"sourcesContent":["import React, { useEffect } from \"react\"\nimport { getStorybookUI, configure } from \"@storybook/react-native\"\nimport { initFonts } from \"../app/theme/fonts\"\n\ndeclare let module\n\nconfigure(() => {\n  require(\"./storybook-registry\")\n}, module)\n\nconst StorybookUI = getStorybookUI({\n  port: 9001,\n  host: \"localhost\",\n  onDeviceUI: true,\n  asyncStorage: require(\"@react-native-async-storage/async-storage\").default || null,\n})\n\nexport function StorybookUIRoot() {\n  useEffect(() => {\n    ;(async () => {\n      await initFonts() // expo only\n      if (typeof __TEST__ === \"undefined\" || !__TEST__) {\n        const Reactotron = require(\"../app/services/reactotron\")\n        const reactotron = new Reactotron.Reactotron()\n        reactotron.setup()\n      }\n    })()\n  }, [])\n\n  return <StorybookUI />\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,cAAc,EAAEC,SAAS,QAAQ,yBAAyB;AACnE,SAASC,SAAS;AAA4B;AAI9CD,SAAS,CAAC,YAAM;EACdE,OAAO,wBAAwB;AACjC,CAAC,EAAEC,MAAM,CAAC;AAEV,IAAMC,WAAW,GAAGL,cAAc,CAAC;EACjCM,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE,IAAI;EAChBC,YAAY,EAAEN,OAAO,CAAC,2CAA2C,CAAC,CAACO,OAAO,IAAI;AAChF,CAAC,CAAC;AAEF,OAAO,SAASC,eAAe,GAAG;EAChCZ,SAAS,CAAC,YAAM;IACd;IAAC,kBAAC,aAAY;MACZ,MAAMG,SAAS,EAAE;MACjB,IAAI,OAAOU,QAAQ,KAAK,WAAW,IAAI,CAACA,QAAQ,EAAE;QAChD,IAAMC,UAAU,GAAGV,OAAO,8BAA8B;QACxD,IAAMW,UAAU,GAAG,IAAID,UAAU,CAACA,UAAU,EAAE;QAC9CC,UAAU,CAACC,KAAK,EAAE;MACpB;IACF,CAAC,GAAG;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,KAAC,WAAW,KAAG;AACxB"},"metadata":{},"sourceType":"module"}