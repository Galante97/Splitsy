{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"placeholderTx\", \"placeholder\", \"labelTx\", \"label\", \"preset\", \"style\", \"inputStyle\", \"forwardedRef\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { color, spacing, typography } from \"../../theme\";\nimport { translate } from \"../../i18n\";\nimport { Text } from \"../text/text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CONTAINER = {\n  paddingVertical: spacing[3]\n};\nvar INPUT = {\n  fontFamily: typography.primary,\n  color: color.text,\n  minHeight: 44,\n  fontSize: 18,\n  backgroundColor: color.palette.white\n};\nvar PRESETS = {\n  default: {}\n};\nexport function TextField(props) {\n  var placeholderTx = props.placeholderTx,\n    placeholder = props.placeholder,\n    labelTx = props.labelTx,\n    label = props.label,\n    _props$preset = props.preset,\n    preset = _props$preset === void 0 ? \"default\" : _props$preset,\n    styleOverride = props.style,\n    inputStyleOverride = props.inputStyle,\n    forwardedRef = props.forwardedRef,\n    rest = _objectWithoutProperties(props, _excluded);\n  var containerStyles = [CONTAINER, PRESETS[preset], styleOverride];\n  var inputStyles = [INPUT, inputStyleOverride];\n  var actualPlaceholder = placeholderTx ? translate(placeholderTx) : placeholder;\n  return _jsxs(View, {\n    style: containerStyles,\n    children: [_jsx(Text, {\n      preset: \"fieldLabel\",\n      tx: labelTx,\n      text: label\n    }), _jsx(TextInput, _objectSpread(_objectSpread({\n      placeholder: actualPlaceholder,\n      placeholderTextColor: color.palette.lighterGrey,\n      underlineColorAndroid: color.transparent\n    }, rest), {}, {\n      style: inputStyles,\n      ref: forwardedRef\n    }))]\n  });\n}","map":{"version":3,"names":["React","color","spacing","typography","translate","Text","CONTAINER","paddingVertical","INPUT","fontFamily","primary","text","minHeight","fontSize","backgroundColor","palette","white","PRESETS","default","TextField","props","placeholderTx","placeholder","labelTx","label","preset","styleOverride","style","inputStyleOverride","inputStyle","forwardedRef","rest","containerStyles","inputStyles","actualPlaceholder","lighterGrey","transparent"],"sources":["/Users/jamesgalante/Desktop/Splitsy/app/components/text-field/text-field.tsx"],"sourcesContent":["import React from \"react\"\nimport { StyleProp, TextInput, TextInputProps, TextStyle, View, ViewStyle } from \"react-native\"\nimport { color, spacing, typography } from \"../../theme\"\nimport { translate, TxKeyPath } from \"../../i18n\"\nimport { Text } from \"../text/text\"\n\n// the base styling for the container\nconst CONTAINER: ViewStyle = {\n  paddingVertical: spacing[3],\n}\n\n// the base styling for the TextInput\nconst INPUT: TextStyle = {\n  fontFamily: typography.primary,\n  color: color.text,\n  minHeight: 44,\n  fontSize: 18,\n  backgroundColor: color.palette.white,\n}\n\n// currently we have no presets, but that changes quickly when you build your app.\nconst PRESETS: { [name: string]: ViewStyle } = {\n  default: {},\n}\n\nexport interface TextFieldProps extends TextInputProps {\n  /**\n   * The placeholder i18n key.\n   */\n  placeholderTx?: TxKeyPath\n\n  /**\n   * The Placeholder text if no placeholderTx is provided.\n   */\n  placeholder?: string\n\n  /**\n   * The label i18n key.\n   */\n  labelTx?: TxKeyPath\n\n  /**\n   * The label text if no labelTx is provided.\n   */\n  label?: string\n\n  /**\n   * Optional container style overrides useful for margins & padding.\n   */\n  style?: StyleProp<ViewStyle>\n\n  /**\n   * Optional style overrides for the input.\n   */\n  inputStyle?: StyleProp<TextStyle>\n\n  /**\n   * Various look & feels.\n   */\n  preset?: keyof typeof PRESETS\n\n  forwardedRef?: any\n}\n\n/**\n * A component which has a label and an input together.\n */\nexport function TextField(props: TextFieldProps) {\n  const {\n    placeholderTx,\n    placeholder,\n    labelTx,\n    label,\n    preset = \"default\",\n    style: styleOverride,\n    inputStyle: inputStyleOverride,\n    forwardedRef,\n    ...rest\n  } = props\n\n  const containerStyles = [CONTAINER, PRESETS[preset], styleOverride]\n  const inputStyles = [INPUT, inputStyleOverride]\n  const actualPlaceholder = placeholderTx ? translate(placeholderTx) : placeholder\n\n  return (\n    <View style={containerStyles}>\n      <Text preset=\"fieldLabel\" tx={labelTx} text={label} />\n      <TextInput\n        placeholder={actualPlaceholder}\n        placeholderTextColor={color.palette.lighterGrey}\n        underlineColorAndroid={color.transparent}\n        {...rest}\n        style={inputStyles}\n        ref={forwardedRef}\n      />\n    </View>\n  )\n}\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAAA;AAEzB,SAASC,KAAK,EAAEC,OAAO,EAAEC,UAAU;AACnC,SAASC,SAAS;AAClB,SAASC,IAAI;AAAsB;AAAA;AAGnC,IAAMC,SAAoB,GAAG;EAC3BC,eAAe,EAAEL,OAAO,CAAC,CAAC;AAC5B,CAAC;AAGD,IAAMM,KAAgB,GAAG;EACvBC,UAAU,EAAEN,UAAU,CAACO,OAAO;EAC9BT,KAAK,EAAEA,KAAK,CAACU,IAAI;EACjBC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,EAAE;EACZC,eAAe,EAAEb,KAAK,CAACc,OAAO,CAACC;AACjC,CAAC;AAGD,IAAMC,OAAsC,GAAG;EAC7CC,OAAO,EAAE,CAAC;AACZ,CAAC;AA4CD,OAAO,SAASC,SAAS,CAACC,KAAqB,EAAE;EAC/C,IACEC,aAAa,GASXD,KAAK,CATPC,aAAa;IACbC,WAAW,GAQTF,KAAK,CARPE,WAAW;IACXC,OAAO,GAOLH,KAAK,CAPPG,OAAO;IACPC,KAAK,GAMHJ,KAAK,CANPI,KAAK;IAAA,gBAMHJ,KAAK,CALPK,MAAM;IAANA,MAAM,8BAAG,SAAS;IACXC,aAAa,GAIlBN,KAAK,CAJPO,KAAK;IACOC,kBAAkB,GAG5BR,KAAK,CAHPS,UAAU;IACVC,YAAY,GAEVV,KAAK,CAFPU,YAAY;IACTC,IAAI,4BACLX,KAAK;EAET,IAAMY,eAAe,GAAG,CAAC1B,SAAS,EAAEW,OAAO,CAACQ,MAAM,CAAC,EAAEC,aAAa,CAAC;EACnE,IAAMO,WAAW,GAAG,CAACzB,KAAK,EAAEoB,kBAAkB,CAAC;EAC/C,IAAMM,iBAAiB,GAAGb,aAAa,GAAGjB,SAAS,CAACiB,aAAa,CAAC,GAAGC,WAAW;EAEhF,OACE,MAAC,IAAI;IAAC,KAAK,EAAEU,eAAgB;IAAA,WAC3B,KAAC,IAAI;MAAC,MAAM,EAAC,YAAY;MAAC,EAAE,EAAET,OAAQ;MAAC,IAAI,EAAEC;IAAM,EAAG,EACtD,KAAC,SAAS;MACR,WAAW,EAAEU,iBAAkB;MAC/B,oBAAoB,EAAEjC,KAAK,CAACc,OAAO,CAACoB,WAAY;MAChD,qBAAqB,EAAElC,KAAK,CAACmC;IAAY,GACrCL,IAAI;MACR,KAAK,EAAEE,WAAY;MACnB,GAAG,EAAEH;IAAa,GAClB;EAAA,EACG;AAEX"},"metadata":{},"sourceType":"module"}