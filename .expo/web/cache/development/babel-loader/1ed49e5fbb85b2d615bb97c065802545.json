{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nexport var processServiceCall = function () {\n  var _ref = _asyncToGenerator(function* (fn, errorMapperFn) {\n    try {\n      return yield Promise.resolve(fn());\n    } catch (e) {\n      throw e;\n    }\n  });\n  return function processServiceCall(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["processServiceCall","fn","errorMapperFn","Promise","resolve","e"],"sources":["/Users/jamesgalante/Desktop/Splitsy/app/services/utils/processServiceCall.ts"],"sourcesContent":["import { AxiosHttpError } from \"./api\";\n\n\nexport const processServiceCall = async <Return, ApiReturn>(\n    fn: () => Return | PromiseLike<Return>,\n    errorMapperFn?: (e: AxiosHttpError<ApiReturn>, res: ApiReturn) => Error,\n): Promise<Return> => {\n    try {\n        return await Promise.resolve(fn());\n    } catch (e) {\n        throw e;\n    }\n}"],"mappings":";AAGA,OAAO,IAAMA,kBAAkB;EAAA,6BAAG,WAC9BC,EAAsC,EACtCC,aAAuE,EACrD;IAClB,IAAI;MACA,aAAaC,OAAO,CAACC,OAAO,CAACH,EAAE,EAAE,CAAC;IACtC,CAAC,CAAC,OAAOI,CAAC,EAAE;MACR,MAAMA,CAAC;IACX;EACJ,CAAC;EAAA,gBATYL,kBAAkB;IAAA;EAAA;AAAA,GAS9B"},"metadata":{},"sourceType":"module"}