{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { getGeneralApiProblem } from \"./api-problem\";\nvar API_PAGE_SIZE = 50;\nexport var CharacterApi = function () {\n  function CharacterApi(api) {\n    _classCallCheck(this, CharacterApi);\n    this.api = api;\n  }\n  _createClass(CharacterApi, [{\n    key: \"getCharacters\",\n    value: function () {\n      var _getCharacters = _asyncToGenerator(function* () {\n        try {\n          var response = yield this.api.apisauce.get(\"https://raw.githubusercontent.com/infinitered/ignite/master/data/rick-and-morty.json\", {\n            amount: API_PAGE_SIZE\n          });\n          if (!response.ok) {\n            var problem = getGeneralApiProblem(response);\n            if (problem) return problem;\n          }\n          var characters = response.data.results;\n          return {\n            kind: \"ok\",\n            characters: characters\n          };\n        } catch (e) {\n          __DEV__ && console.tron.log(e.message);\n          return {\n            kind: \"bad-data\"\n          };\n        }\n      });\n      function getCharacters() {\n        return _getCharacters.apply(this, arguments);\n      }\n      return getCharacters;\n    }()\n  }]);\n  return CharacterApi;\n}();","map":{"version":3,"names":["getGeneralApiProblem","API_PAGE_SIZE","CharacterApi","api","response","apisauce","get","amount","ok","problem","characters","data","results","kind","e","__DEV__","console","tron","log","message"],"sources":["/Users/jamesgalante/Desktop/Splitsy/app/services/api/character-api.ts"],"sourcesContent":["import { ApiResponse } from \"apisauce\"\nimport { Api } from \"./api\"\nimport { GetCharactersResult } from \"./api.types\"\nimport { getGeneralApiProblem } from \"./api-problem\"\n\nconst API_PAGE_SIZE = 50\n\nexport class CharacterApi {\n  private api: Api\n\n  constructor(api: Api) {\n    this.api = api\n  }\n\n  async getCharacters(): Promise<GetCharactersResult> {\n    try {\n      // make the api call\n      const response: ApiResponse<any> = await this.api.apisauce.get(\n        \"https://raw.githubusercontent.com/infinitered/ignite/master/data/rick-and-morty.json\",\n        { amount: API_PAGE_SIZE },\n      )\n\n      // the typical ways to die when calling an api\n      if (!response.ok) {\n        const problem = getGeneralApiProblem(response)\n        if (problem) return problem\n      }\n\n      const characters = response.data.results\n\n      return { kind: \"ok\", characters }\n    } catch (e) {\n      __DEV__ && console.tron.log(e.message)\n      return { kind: \"bad-data\" }\n    }\n  }\n}\n"],"mappings":";;;AAGA,SAASA,oBAAoB;AAE7B,IAAMC,aAAa,GAAG,EAAE;AAExB,WAAaC,YAAY;EAGvB,sBAAYC,GAAQ,EAAE;IAAA;IACpB,IAAI,CAACA,GAAG,GAAGA,GAAG;EAChB;EAAC;IAAA;IAAA;MAAA,uCAED,aAAoD;QAClD,IAAI;UAEF,IAAMC,QAA0B,SAAS,IAAI,CAACD,GAAG,CAACE,QAAQ,CAACC,GAAG,CAC5D,sFAAsF,EACtF;YAAEC,MAAM,EAAEN;UAAc,CAAC,CAC1B;UAGD,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;YAChB,IAAMC,OAAO,GAAGT,oBAAoB,CAACI,QAAQ,CAAC;YAC9C,IAAIK,OAAO,EAAE,OAAOA,OAAO;UAC7B;UAEA,IAAMC,UAAU,GAAGN,QAAQ,CAACO,IAAI,CAACC,OAAO;UAExC,OAAO;YAAEC,IAAI,EAAE,IAAI;YAAEH,UAAU,EAAVA;UAAW,CAAC;QACnC,CAAC,CAAC,OAAOI,CAAC,EAAE;UACVC,OAAO,IAAIC,OAAO,CAACC,IAAI,CAACC,GAAG,CAACJ,CAAC,CAACK,OAAO,CAAC;UACtC,OAAO;YAAEN,IAAI,EAAE;UAAW,CAAC;QAC7B;MACF,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}