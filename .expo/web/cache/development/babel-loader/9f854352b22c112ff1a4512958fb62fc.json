{"ast":null,"code":"import { types } from \"mobx-state-tree\";\nexport var CharacterModel = types.model(\"Character\").props({\n  id: types.identifierNumber,\n  name: types.maybe(types.string),\n  status: types.maybe(types.string),\n  image: types.maybe(types.string)\n});\nexport var createCharacterDefaultModel = function createCharacterDefaultModel() {\n  return types.optional(CharacterModel, {});\n};","map":{"version":3,"names":["types","CharacterModel","model","props","id","identifierNumber","name","maybe","string","status","image","createCharacterDefaultModel","optional"],"sources":["/Users/jamesgalante/Desktop/Splitsy/app/models/character/character.ts"],"sourcesContent":["import { Instance, SnapshotIn, SnapshotOut, types } from \"mobx-state-tree\"\n\n/**\n * Rick and Morty character model.\n */\nexport const CharacterModel = types.model(\"Character\").props({\n  id: types.identifierNumber,\n  name: types.maybe(types.string),\n  status: types.maybe(types.string),\n  image: types.maybe(types.string),\n})\n\nexport interface Character extends Instance<typeof CharacterModel> {}\nexport interface CharacterSnapshotOut extends SnapshotOut<typeof CharacterModel> {}\nexport interface CharacterSnapshotIn extends SnapshotIn<typeof CharacterModel> {}\nexport const createCharacterDefaultModel = () => types.optional(CharacterModel, {})\n"],"mappings":"AAAA,SAA4CA,KAAK,QAAQ,iBAAiB;AAK1E,OAAO,IAAMC,cAAc,GAAGD,KAAK,CAACE,KAAK,CAAC,WAAW,CAAC,CAACC,KAAK,CAAC;EAC3DC,EAAE,EAAEJ,KAAK,CAACK,gBAAgB;EAC1BC,IAAI,EAAEN,KAAK,CAACO,KAAK,CAACP,KAAK,CAACQ,MAAM,CAAC;EAC/BC,MAAM,EAAET,KAAK,CAACO,KAAK,CAACP,KAAK,CAACQ,MAAM,CAAC;EACjCE,KAAK,EAAEV,KAAK,CAACO,KAAK,CAACP,KAAK,CAACQ,MAAM;AACjC,CAAC,CAAC;AAKF,OAAO,IAAMG,2BAA2B,GAAG,SAA9BA,2BAA2B;EAAA,OAASX,KAAK,CAACY,QAAQ,CAACX,cAAc,EAAE,CAAC,CAAC,CAAC;AAAA"},"metadata":{},"sourceType":"module"}