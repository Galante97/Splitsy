{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { create } from \"apisauce\";\nimport { getGeneralApiProblem } from \"./api-problem\";\nimport { DEFAULT_API_CONFIG } from \"./api-config\";\nexport var Api = function () {\n  function Api() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_API_CONFIG;\n    _classCallCheck(this, Api);\n    this.config = config;\n  }\n  _createClass(Api, [{\n    key: \"setup\",\n    value: function setup() {\n      this.apisauce = create({\n        baseURL: this.config.url,\n        timeout: this.config.timeout,\n        headers: {\n          Accept: \"application/json\"\n        }\n      });\n    }\n  }, {\n    key: \"getUsers\",\n    value: function () {\n      var _getUsers = _asyncToGenerator(function* () {\n        var response = yield this.apisauce.get(\"/users\");\n        if (!response.ok) {\n          var problem = getGeneralApiProblem(response);\n          if (problem) return problem;\n        }\n        var convertUser = function convertUser(raw) {\n          return {\n            id: raw.id,\n            name: raw.name\n          };\n        };\n        try {\n          var rawUsers = response.data;\n          var resultUsers = rawUsers.map(convertUser);\n          return {\n            kind: \"ok\",\n            users: resultUsers\n          };\n        } catch (_unused) {\n          return {\n            kind: \"bad-data\"\n          };\n        }\n      });\n      function getUsers() {\n        return _getUsers.apply(this, arguments);\n      }\n      return getUsers;\n    }()\n  }, {\n    key: \"getUser\",\n    value: function () {\n      var _getUser = _asyncToGenerator(function* (id) {\n        var response = yield this.apisauce.get(\"/users/\" + id);\n        if (!response.ok) {\n          var problem = getGeneralApiProblem(response);\n          if (problem) return problem;\n        }\n        try {\n          var resultUser = {\n            id: response.data.id,\n            name: response.data.name\n          };\n          return {\n            kind: \"ok\",\n            user: resultUser\n          };\n        } catch (_unused2) {\n          return {\n            kind: \"bad-data\"\n          };\n        }\n      });\n      function getUser(_x) {\n        return _getUser.apply(this, arguments);\n      }\n      return getUser;\n    }()\n  }]);\n  return Api;\n}();","map":{"version":3,"names":["create","getGeneralApiProblem","DEFAULT_API_CONFIG","Api","config","apisauce","baseURL","url","timeout","headers","Accept","response","get","ok","problem","convertUser","raw","id","name","rawUsers","data","resultUsers","map","kind","users","resultUser","user"],"sources":["/Users/jamesgalante/Desktop/Splitsy/app/services/api/api.ts"],"sourcesContent":["import { ApisauceInstance, create, ApiResponse } from \"apisauce\"\nimport { getGeneralApiProblem } from \"./api-problem\"\nimport { ApiConfig, DEFAULT_API_CONFIG } from \"./api-config\"\nimport * as Types from \"./api.types\"\n\n/**\n * Manages all requests to the API.\n */\nexport class Api {\n  /**\n   * The underlying apisauce instance which performs the requests.\n   */\n  apisauce: ApisauceInstance\n\n  /**\n   * Configurable options.\n   */\n  config: ApiConfig\n\n  /**\n   * Creates the api.\n   *\n   * @param config The configuration to use.\n   */\n  constructor(config: ApiConfig = DEFAULT_API_CONFIG) {\n    this.config = config\n  }\n\n  /**\n   * Sets up the API.  This will be called during the bootup\n   * sequence and will happen before the first React component\n   * is mounted.\n   *\n   * Be as quick as possible in here.\n   */\n  setup() {\n    // construct the apisauce instance\n    this.apisauce = create({\n      baseURL: this.config.url,\n      timeout: this.config.timeout,\n      headers: {\n        Accept: \"application/json\",\n      },\n    })\n  }\n\n  /**\n   * Gets a list of users.\n   */\n  async getUsers(): Promise<Types.GetUsersResult> {\n    // make the api call\n    const response: ApiResponse<any> = await this.apisauce.get(`/users`)\n\n    // the typical ways to die when calling an api\n    if (!response.ok) {\n      const problem = getGeneralApiProblem(response)\n      if (problem) return problem\n    }\n\n    const convertUser = (raw) => {\n      return {\n        id: raw.id,\n        name: raw.name,\n      }\n    }\n\n    // transform the data into the format we are expecting\n    try {\n      const rawUsers = response.data\n      const resultUsers: Types.User[] = rawUsers.map(convertUser)\n      return { kind: \"ok\", users: resultUsers }\n    } catch {\n      return { kind: \"bad-data\" }\n    }\n  }\n\n  /**\n   * Gets a single user by ID\n   */\n\n  async getUser(id: string): Promise<Types.GetUserResult> {\n    // make the api call\n    const response: ApiResponse<any> = await this.apisauce.get(`/users/${id}`)\n\n    // the typical ways to die when calling an api\n    if (!response.ok) {\n      const problem = getGeneralApiProblem(response)\n      if (problem) return problem\n    }\n\n    // transform the data into the format we are expecting\n    try {\n      const resultUser: Types.User = {\n        id: response.data.id,\n        name: response.data.name,\n      }\n      return { kind: \"ok\", user: resultUser }\n    } catch {\n      return { kind: \"bad-data\" }\n    }\n  }\n}\n"],"mappings":";;;AAAA,SAA2BA,MAAM,QAAqB,UAAU;AAChE,SAASC,oBAAoB;AAC7B,SAAoBC,kBAAkB;AAMtC,WAAaC,GAAG;EAgBd,eAAoD;IAAA,IAAxCC,MAAiB,uEAAGF,kBAAkB;IAAA;IAChD,IAAI,CAACE,MAAM,GAAGA,MAAM;EACtB;EAAC;IAAA;IAAA,OASD,iBAAQ;MAEN,IAAI,CAACC,QAAQ,GAAGL,MAAM,CAAC;QACrBM,OAAO,EAAE,IAAI,CAACF,MAAM,CAACG,GAAG;QACxBC,OAAO,EAAE,IAAI,CAACJ,MAAM,CAACI,OAAO;QAC5BC,OAAO,EAAE;UACPC,MAAM,EAAE;QACV;MACF,CAAC,CAAC;IACJ;EAAC;IAAA;IAAA;MAAA,kCAKD,aAAgD;QAE9C,IAAMC,QAA0B,SAAS,IAAI,CAACN,QAAQ,CAACO,GAAG,UAAU;QAGpE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,IAAMC,OAAO,GAAGb,oBAAoB,CAACU,QAAQ,CAAC;UAC9C,IAAIG,OAAO,EAAE,OAAOA,OAAO;QAC7B;QAEA,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,GAAG,EAAK;UAC3B,OAAO;YACLC,EAAE,EAAED,GAAG,CAACC,EAAE;YACVC,IAAI,EAAEF,GAAG,CAACE;UACZ,CAAC;QACH,CAAC;QAGD,IAAI;UACF,IAAMC,QAAQ,GAAGR,QAAQ,CAACS,IAAI;UAC9B,IAAMC,WAAyB,GAAGF,QAAQ,CAACG,GAAG,CAACP,WAAW,CAAC;UAC3D,OAAO;YAAEQ,IAAI,EAAE,IAAI;YAAEC,KAAK,EAAEH;UAAY,CAAC;QAC3C,CAAC,CAAC,gBAAM;UACN,OAAO;YAAEE,IAAI,EAAE;UAAW,CAAC;QAC7B;MACF,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,iCAMD,WAAcN,EAAU,EAAgC;QAEtD,IAAMN,QAA0B,SAAS,IAAI,CAACN,QAAQ,CAACO,GAAG,aAAWK,EAAE,CAAG;QAG1E,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;UAChB,IAAMC,OAAO,GAAGb,oBAAoB,CAACU,QAAQ,CAAC;UAC9C,IAAIG,OAAO,EAAE,OAAOA,OAAO;QAC7B;QAGA,IAAI;UACF,IAAMW,UAAsB,GAAG;YAC7BR,EAAE,EAAEN,QAAQ,CAACS,IAAI,CAACH,EAAE;YACpBC,IAAI,EAAEP,QAAQ,CAACS,IAAI,CAACF;UACtB,CAAC;UACD,OAAO;YAAEK,IAAI,EAAE,IAAI;YAAEG,IAAI,EAAED;UAAW,CAAC;QACzC,CAAC,CAAC,iBAAM;UACN,OAAO;YAAEF,IAAI,EAAE;UAAW,CAAC;QAC7B;MACF,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}