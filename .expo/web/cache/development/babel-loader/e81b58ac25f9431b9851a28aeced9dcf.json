{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\";\nimport { Checkbox } from \"./checkbox\";\nimport { Toggle } from \"../../utils/react-powerplug\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar arrayStyle = [{\n  paddingVertical: 40\n}, {\n  alignSelf: \"flex-end\"\n}];\nvar arrayOutlineStyle = [{\n  borderColor: \"#b443c9\"\n}, {\n  borderWidth: 25\n}];\nvar arrayFillStyle = [{\n  backgroundColor: \"#55e0ff\"\n}];\nstoriesOf(\"Checkbox\", module).addDecorator(function (fn) {\n  return _jsx(StoryScreen, {\n    children: fn()\n  });\n}).add(\"Behaviour\", function () {\n  return _jsxs(Story, {\n    children: [_jsx(UseCase, {\n      text: \"The Checkbox\",\n      usage: \"Use the checkbox to represent on/off states.\",\n      children: _jsx(Toggle, {\n        initial: false,\n        children: function children(_ref) {\n          var on = _ref.on,\n            toggle = _ref.toggle;\n          return _jsx(Checkbox, {\n            value: on,\n            onToggle: toggle,\n            text: \"Toggle me\"\n          });\n        }\n      })\n    }), _jsx(UseCase, {\n      text: \"value = true\",\n      usage: \"This is permanently on.\",\n      children: _jsx(Checkbox, {\n        value: true,\n        text: \"Always on\"\n      })\n    }), _jsx(UseCase, {\n      text: \"value = false\",\n      usage: \"This is permanantly off.\",\n      children: _jsx(Checkbox, {\n        value: false,\n        text: \"Always off\"\n      })\n    })]\n  });\n}).add(\"Styling\", function () {\n  return _jsxs(Story, {\n    children: [_jsx(UseCase, {\n      text: \"multiline = true\",\n      usage: \"For really really long text\",\n      children: _jsx(Toggle, {\n        initial: false,\n        children: function children(_ref2) {\n          var on = _ref2.on,\n            toggle = _ref2.toggle;\n          return _jsx(View, {\n            children: _jsx(Checkbox, {\n              text: \"We\\u2019re an App Design & Development Team. Experts in mobile & web technologies. We create beautiful, functional mobile apps and websites.\",\n              value: on,\n              multiline: true,\n              onToggle: toggle\n            })\n          });\n        }\n      })\n    }), _jsx(UseCase, {\n      text: \".style\",\n      usage: \"Override the container style\",\n      children: _jsx(Toggle, {\n        initial: false,\n        children: function children(_ref3) {\n          var on = _ref3.on,\n            toggle = _ref3.toggle;\n          return _jsx(View, {\n            children: _jsx(Checkbox, {\n              text: \"Hello there!\",\n              value: on,\n              style: {\n                backgroundColor: \"purple\",\n                marginLeft: 40,\n                paddingVertical: 30,\n                paddingLeft: 60\n              },\n              onToggle: toggle\n            })\n          });\n        }\n      })\n    }), _jsx(UseCase, {\n      text: \".outlineStyle\",\n      usage: \"Override the outline style\",\n      children: _jsx(Toggle, {\n        initial: false,\n        children: function children(_ref4) {\n          var on = _ref4.on,\n            toggle = _ref4.toggle;\n          return _jsx(View, {\n            children: _jsx(Checkbox, {\n              text: \"Outline is the box frame\",\n              value: on,\n              outlineStyle: {\n                borderColor: \"green\",\n                borderRadius: 10,\n                borderWidth: 4,\n                width: 60,\n                height: 20\n              },\n              onToggle: toggle\n            })\n          });\n        }\n      })\n    }), _jsx(UseCase, {\n      text: \".fillStyle\",\n      usage: \"Override the fill style\",\n      children: _jsx(Toggle, {\n        initial: false,\n        children: function children(_ref5) {\n          var on = _ref5.on,\n            toggle = _ref5.toggle;\n          return _jsx(View, {\n            children: _jsx(Checkbox, {\n              text: \"Fill er up\",\n              value: on,\n              fillStyle: {\n                backgroundColor: \"red\",\n                borderRadius: 8\n              },\n              onToggle: toggle\n            })\n          });\n        }\n      })\n    }), _jsx(UseCase, {\n      text: \"Array style\",\n      usage: \"Use array styles\",\n      children: _jsx(Toggle, {\n        initial: false,\n        children: function children(_ref6) {\n          var on = _ref6.on,\n            toggle = _ref6.toggle;\n          return _jsx(View, {\n            children: _jsx(Checkbox, {\n              text: \"Check it twice\",\n              value: on,\n              onToggle: toggle,\n              style: arrayStyle,\n              outlineStyle: arrayOutlineStyle,\n              fillStyle: arrayFillStyle\n            })\n          });\n        }\n      })\n    })]\n  });\n});","map":{"version":3,"names":["React","storiesOf","StoryScreen","Story","UseCase","Checkbox","Toggle","arrayStyle","paddingVertical","alignSelf","arrayOutlineStyle","borderColor","borderWidth","arrayFillStyle","backgroundColor","module","addDecorator","fn","add","on","toggle","marginLeft","paddingLeft","borderRadius","width","height"],"sources":["/Users/jamesgalante/Desktop/Splitsy/app/components/checkbox/checkbox.story.tsx"],"sourcesContent":["/* eslint-disable react-native/no-inline-styles */\n/* eslint-disable react-native/no-color-literals */\n\nimport React from \"react\"\nimport { View, ViewStyle } from \"react-native\"\nimport { storiesOf } from \"@storybook/react-native\"\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\"\nimport { Checkbox } from \"./checkbox\"\nimport { Toggle } from \"../../utils/react-powerplug\"\n\ndeclare let module\n\nconst arrayStyle: ViewStyle[] = [{ paddingVertical: 40 }, { alignSelf: \"flex-end\" }]\nconst arrayOutlineStyle: ViewStyle[] = [{ borderColor: \"#b443c9\" }, { borderWidth: 25 }]\nconst arrayFillStyle: ViewStyle[] = [{ backgroundColor: \"#55e0ff\" }]\n\nstoriesOf(\"Checkbox\", module)\n  .addDecorator((fn) => <StoryScreen>{fn()}</StoryScreen>)\n  .add(\"Behaviour\", () => (\n    <Story>\n      <UseCase text=\"The Checkbox\" usage=\"Use the checkbox to represent on/off states.\">\n        <Toggle initial={false}>\n          {({ on, toggle }) => <Checkbox value={on} onToggle={toggle} text=\"Toggle me\" />}\n        </Toggle>\n      </UseCase>\n      <UseCase text=\"value = true\" usage=\"This is permanently on.\">\n        <Checkbox value={true} text=\"Always on\" />\n      </UseCase>\n      <UseCase text=\"value = false\" usage=\"This is permanantly off.\">\n        <Checkbox value={false} text=\"Always off\" />\n      </UseCase>\n    </Story>\n  ))\n  .add(\"Styling\", () => (\n    <Story>\n      <UseCase text=\"multiline = true\" usage=\"For really really long text\">\n        <Toggle initial={false}>\n          {({ on, toggle }) => (\n            <View>\n              <Checkbox\n                text=\"Weâ€™re an App Design & Development Team. Experts in mobile & web technologies. We create beautiful, functional mobile apps and websites.\"\n                value={on}\n                multiline\n                onToggle={toggle}\n              />\n            </View>\n          )}\n        </Toggle>\n      </UseCase>\n      <UseCase text=\".style\" usage=\"Override the container style\">\n        <Toggle initial={false}>\n          {({ on, toggle }) => (\n            <View>\n              <Checkbox\n                text=\"Hello there!\"\n                value={on}\n                style={{\n                  backgroundColor: \"purple\",\n                  marginLeft: 40,\n                  paddingVertical: 30,\n                  paddingLeft: 60,\n                }}\n                onToggle={toggle}\n              />\n            </View>\n          )}\n        </Toggle>\n      </UseCase>\n      <UseCase text=\".outlineStyle\" usage=\"Override the outline style\">\n        <Toggle initial={false}>\n          {({ on, toggle }) => (\n            <View>\n              <Checkbox\n                text=\"Outline is the box frame\"\n                value={on}\n                outlineStyle={{\n                  borderColor: \"green\",\n                  borderRadius: 10,\n                  borderWidth: 4,\n                  width: 60,\n                  height: 20,\n                }}\n                onToggle={toggle}\n              />\n            </View>\n          )}\n        </Toggle>\n      </UseCase>\n      <UseCase text=\".fillStyle\" usage=\"Override the fill style\">\n        <Toggle initial={false}>\n          {({ on, toggle }) => (\n            <View>\n              <Checkbox\n                text=\"Fill er up\"\n                value={on}\n                fillStyle={{ backgroundColor: \"red\", borderRadius: 8 }}\n                onToggle={toggle}\n              />\n            </View>\n          )}\n        </Toggle>\n      </UseCase>\n\n      <UseCase text=\"Array style\" usage=\"Use array styles\">\n        <Toggle initial={false}>\n          {({ on, toggle }) => (\n            <View>\n              <Checkbox\n                text=\"Check it twice\"\n                value={on}\n                onToggle={toggle}\n                style={arrayStyle}\n                outlineStyle={arrayOutlineStyle}\n                fillStyle={arrayFillStyle}\n              />\n            </View>\n          )}\n        </Toggle>\n      </UseCase>\n    </Story>\n  ))\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}