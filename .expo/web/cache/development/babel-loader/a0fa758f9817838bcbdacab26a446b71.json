{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from \"../text/text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar chipStyle = {\n  width: 50,\n  height: 50,\n  borderRadius: 50,\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  shadowColor: \"black\",\n  shadowOffset: {\n    width: 0,\n    height: 3\n  },\n  shadowOpacity: 0.4,\n  shadowRadius: 3\n};\nvar initialsStyle = {\n  color: \"white\",\n  fontSize: 25,\n  textShadowColor: 'rgba(0, 0, 0, 0.4)',\n  textShadowOffset: {\n    width: 0,\n    height: 3\n  },\n  textShadowRadius: 7\n};\nexport function NameChip(props) {\n  var randomColor = Math.floor(Math.random() * 16777215).toString(16);\n  var name = props.name,\n    color = props.color,\n    _props$size = props.size,\n    size = _props$size === void 0 ? 50 : _props$size;\n  console.log({\n    randomColor: randomColor\n  });\n  return _jsx(View, {\n    children: _jsx(TouchableOpacity, {\n      style: _objectSpread(_objectSpread({}, chipStyle), {}, {\n        width: size,\n        height: size,\n        backgroundColor: color != null ? color : \"#\" + randomColor,\n        borderRadius: size\n      }),\n      children: _jsx(Text, {\n        style: _objectSpread(_objectSpread({}, initialsStyle), {}, {\n          fontSize: size / 2,\n          fontWeight: \"600\"\n        }),\n        children: \"JG\"\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","Text","chipStyle","width","height","borderRadius","display","alignItems","justifyContent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","initialsStyle","color","fontSize","textShadowColor","textShadowOffset","textShadowRadius","NameChip","props","randomColor","Math","floor","random","toString","name","size","console","log","backgroundColor","fontWeight"],"sources":["/Users/jamesgalante/Desktop/Splitsy/app/components/name-chip/name-chip.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { View, ImageStyle, StyleProp, ViewStyle, TouchableOpacity, TextStyle } from \"react-native\"\nimport { Text } from \"../text/text\"\n\nexport interface NameChipProps {\n  name: string\n  color?: string\n  size?: number\n}\n\nconst chipStyle: ViewStyle = {\n  width: 50,\n  height: 50,\n  borderRadius: 50,\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  // boxShadow: '0px 3px 2px rgba(0, 0, 0, 0.25)'\n  shadowColor: \"black\",\n  shadowOffset: { width: 0, height: 3 },\n  shadowOpacity: 0.4,\n  shadowRadius: 3,\n}\n\nconst initialsStyle: TextStyle = {\n  color: \"white\",\n  fontSize: 25,\n  textShadowColor: 'rgba(0, 0, 0, 0.4)',\n  textShadowOffset: { width: 0, height: 3 },\n  textShadowRadius: 7\n}\n\nexport function NameChip(props: NameChipProps) {\n  var randomColor = Math.floor(Math.random() * 16777215).toString(16);\n\n  const { name, color, size = 50 } = props\n  console.log({ randomColor })\n  return (\n    <View>\n      <TouchableOpacity style={{ ...chipStyle, width: size, height: size, backgroundColor: color ?? `#${randomColor}`, borderRadius: size }}>\n        <Text style={{ ...initialsStyle, fontSize: size / 2, fontWeight: \"600\" }}>JG</Text>\n      </TouchableOpacity>\n    </View >\n  )\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAE9B,SAASC,IAAI;AAAsB;AAQnC,IAAMC,SAAoB,GAAG;EAC3BC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,EAAE;EACVC,YAAY,EAAE,EAAE;EAChBC,OAAO,EAAE,MAAM;EACfC,UAAU,EAAE,QAAQ;EACpBC,cAAc,EAAE,QAAQ;EAExBC,WAAW,EAAE,OAAO;EACpBC,YAAY,EAAE;IAAEP,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC;EACrCO,aAAa,EAAE,GAAG;EAClBC,YAAY,EAAE;AAChB,CAAC;AAED,IAAMC,aAAwB,GAAG;EAC/BC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE,EAAE;EACZC,eAAe,EAAE,oBAAoB;EACrCC,gBAAgB,EAAE;IAAEd,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC;EACzCc,gBAAgB,EAAE;AACpB,CAAC;AAED,OAAO,SAASC,QAAQ,CAACC,KAAoB,EAAE;EAC7C,IAAIC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,QAAQ,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;EAEnE,IAAQC,IAAI,GAAuBN,KAAK,CAAhCM,IAAI;IAAEZ,KAAK,GAAgBM,KAAK,CAA1BN,KAAK;IAAA,cAAgBM,KAAK,CAAnBO,IAAI;IAAJA,IAAI,4BAAG,EAAE;EAC9BC,OAAO,CAACC,GAAG,CAAC;IAAER,WAAW,EAAXA;EAAY,CAAC,CAAC;EAC5B,OACE,KAAC,IAAI;IAAA,UACH,KAAC,gBAAgB;MAAC,KAAK,kCAAOnB,SAAS;QAAEC,KAAK,EAAEwB,IAAI;QAAEvB,MAAM,EAAEuB,IAAI;QAAEG,eAAe,EAAEhB,KAAK,WAALA,KAAK,SAAQO,WAAa;QAAEhB,YAAY,EAAEsB;MAAI,EAAG;MAAA,UACpI,KAAC,IAAI;QAAC,KAAK,kCAAOd,aAAa;UAAEE,QAAQ,EAAEY,IAAI,GAAG,CAAC;UAAEI,UAAU,EAAE;QAAK,EAAG;QAAA,UAAC;MAAE;IAAO;EAClE,EACb;AAEZ"},"metadata":{},"sourceType":"module"}